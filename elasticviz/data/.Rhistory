boxplot(relevant_papers_found, col=(c("orange","#530A15")), las = 2,  names=cn,  ylab="Relevant Papers Found")
par(xpd=TRUE, mar=mar)
legend(0.35,max(relevant_papers_found)+1.4, lcn, fill=(c("orange","#530A15")), horiz=TRUE)
dev.off()
paper_score = data.frame(T1.paper_score_with_reco, T1.paper_score_no_reco, T2.paper_score_with_reco, T2.paper_score_no_reco)
png("img/paper_score.png", width = 350, height = 300, units = "px", pointsize = 15)
par(xpd=FALSE, mar=mar)
boxplot(paper_score, las = 2, names=cn, col=(c("orange","#530A15")), ylab="Paper Score")
par(xpd=TRUE, mar=mar)
legend(0.35,max(paper_score)+23.5, lcn, fill=(c("orange","#530A15")), horiz=TRUE)
dev.off()
par(xpd=FALSE, mar=mar)
boxplot(paper_score, las = 2, names=cn, col=(c("orange","#530A15")), ylab="Paper Score")
par(xpd=TRUE, mar=mar)
legend(0.35,max(paper_score)+23.5, lcn, fill=(c("orange","#530A15")), horiz=TRUE)
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
q()
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
q()
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
# installing/loading the package:
if(!require(installr)) {
install.packages("installr"); require(installr)} #load / install+load installr
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
find_tools()
findtools()
find_r_tools()
find_rtools()
find_rtools()
install.packages("rtools")
install.packages(c("codetools", "lattice", "manipulate", "MASS", "Matrix", "mgcv"))
install.packages("rtools")
install.packages('Rserve')
install.packages('ggplot2')
install.packages('devtools')
install.packages('RCurl')
install.packages('RJSONIO')
find_rtools()
library(installr)
find_rtools()
install.packages("installr");
install.packages("installr")
require(installr)} #load / install+load installr
library(installr)
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
find_rtools()
install.packages('devtools')
find_rtools()
library(Rserve)
find_rtools()
library(devtools)
find_rtools()
library(devtools)
# using the package:
updateR() # this will start the updating process of your R installation.  It will check for newer versions, and if one is available, will guide you through the decisions you'd need to make.
find_rtools()
install.packages('rattle')
rattle()
library(rattle)
rattle()
library(corrplot)
install.packages('corrplot')
library(corrplot)
install.packages('ggobi')
#Seperate X and Y coordinates in vectors
#Seperate X and Y coordinates in vectors
eyeCSV <- read.csv("C:/SixthSense/sixthsense_dev_documentation/Datasets/Csv/CSVSensorData_Dataset20141020-2/Eye.csv", header = TRUE, sep=",", stringsAsFactors = FALSE)
mouseCSV <- read.csv("C:/SixthSense/sixthsense_dev_documentation/Datasets/Csv/CSVSensorData_Dataset20141020-2/Mouse.csv", header = TRUE, sep=",", dec=".",  stringsAsFactors = FALSE)
eyeX <- as.matrix(eyeCSV[2])
eyeY <- as.matrix(eyeCSV[3])
eyeXVec <- c()
eyeYVec <- c()
#Falls eine Koordinate negativ ist, dann nicht in den Datenstaz nehmen
#for(i in 1:length(eyeX)){
#if(eyeX[i] >= 0 && eyeY[i] >= 0){
#eyeXVec <- append(eyeXVec, eyeX[i])
#eyeYVec <- append(eyeYVec, eyeY[i])
#}
#}
#Mittelwerte berechnen
#eyeXMean <- mean(eyeXVec)
#print(eyeXMean)
#eyeYMean <- mean(eyeYVec)
#print(eyeYMean)
#for(i in 1:length(mouseCSV[,1])){
#if((mouseCSV[i,6] == "mousePressedLeft") || (mouseCSV[i,6] == "mouseClickedLeft")){
#print(cat(i,mouseCSV[i,6]))
#}
#}
#plot(mouseCSV[,2], mouseCSV[,3], xlab="mouseX", ylab="mouseY",col="red")
#eyeXYMouseTime <- matrix(0, length(mouseCSV[,1]), 2)
#eyeXYMouseTime[1,1] <- 34
#eyeXYMouseTime[1,2] <- 3445
#Replace string Caution: Does not change it in the dataset!!!
#gsub("T", " ", mouseCSV[,1])
# this tells R you want it to consider 3 digits for seconds.
#options(digits.secs = 0)
#strptime(gsub("T", " ", mouseCSV[17,1]), "%Y-%m-%d %H:%M:%OS %z")
#mouseTime <- toString(strptime(gsub("T", " ", mouseCSV[1,1]), "%Y-%m-%d %H:%M:%OS %z"))
#print(mouseTime)
#eyeTime <- toString(gsub(" CEST", "", strptime(eyeCSV[381,1], "%d.%m.%Y %H:%M:%S")))
#print(eyeTime)
#if(mouseTime == eyeTime){
#print("eyeTime")
#}else{
#print("eyeTimejhghjghj")
#}
eyeXTime <- c()
eyeYTime <- c()
mouseXTime <- c()
mouseYTime <- c()
jump <- 1
i <- 1
j <- 1
counter <- 1
for(i in 1:length(mouseCSV[,1])){
if((mouseCSV[i,6] == "mousePressedLeft") || (mouseCSV[i,6] == "mouseClickedLeft")){
mouseTime <- toString(strptime(gsub("T", " ", mouseCSV[i,1]), "%Y-%m-%d %H:%M:%OS %z"))
j = jump
for(j in j:length(eyeCSV[,1])){
eyeTime <- toString(gsub(" CEST", "", strptime(eyeCSV[j,1], "%d.%m.%Y %H:%M:%S")))
#if((mouseTime == eyeTime) && (eyeCSV[j,6] == "BothEyesTracked") && (eyeCSV[j,7] >= 0) && (eyeCSV[j,8] >= 0) && (eyeCSV[j,9] >= 0) && (eyeCSV[j,10] >= 0)){
if(mouseTime == eyeTime){
print(mouseTime)
print(eyeTime)
eyeXTime[counter] <- eyeCSV[j,2] #X-Coordinate
eyeYTime[counter] <- eyeCSV[j,3] #Y-Coordinate
mouseXTime[counter] <- mouseCSV[i,2]
mouseYTime[counter] <- mouseCSV[i,3]
jump = j
print(counter)
counter = counter + 1
break #No need to look for other datapoints because its ordered by timestamp
}
}
}
}
#Pearson test
cor.test(eyeXTime,mouseXTime, method="pearson")
cor.test(eyeYTime,mouseYTime, method="pearson")
plot(eyeXTime, mouseXTime, xlab="eyeX", ylab="mouseX",col="red")
title(main="Linear relation for eyeX and mouseX \n Dataset: 20141020-2")
x11()
plot(eyeYTime, mouseYTime, xlab="eyeY", ylab="mouseY",col="red")
title(main="Linear relation for eyeY and mouseY \n Dataset: 20141020-2")
eyeCSV <- read.csv("C:/SixthSense/sixthsense_dev_documentation/Datasets/Csv/CSVSensorData_Dataset20141020-2/Eye.csv", header = TRUE, sep=",", stringsAsFactors = FALSE)
eyeCSV <- read.csv("D:\Graz_2013\Frequentis_6th_Sense\Git_Repositories\sixthsense_dev_documentation\Datasets\Experiment_I_II\Final_CSV\All_Users\new_all_fixations_ext.csv", header = TRUE, sep=",", stringsAsFactors = FALSE)
eyeCSV <- read.csv("D:/Graz_2013/Frequentis_6th_Sense/Git_Repositories/sixthsense_dev_documentation/Datasets/Experiment_I_II/Final_CSV/All_Users/new_all_fixations_ext.csv", header = TRUE, sep=",", stringsAsFactors = FALSE)
eyeCSV <- read.csv("D:/Graz_2013/Frequentis_6th_Sense/Git_Repositories/sixthsense_dev_documentation/Datasets/Experiment_I_II/Final_CSV/All_Users/new_all_fixations_ext.csv", header = TRUE, sep=";", stringsAsFactors = FALSE)
eyeCSV <- read.csv("D:/Graz_2013/Frequentis_6th_Sense/Git_Repositories/sixthsense_dev_documentation/Datasets/Experiment_I_II/Final_CSV/All_Users/new_all_fixations_ext.csv", header = TRUE, sep=";", stringsAsFactors = FALSE)
install.packages("RSelenium")
library("RSelenium")
startServer()
checkForServer()
startServer()
mybrowser <- remoteDriver()
mybrowser$open()
mybrowser$navigate("http://www.weather.gov")
wxbox <- mybrowser$findElement(using = 'css selector', "#inputstring")
wxbox$sendKeysToElement(list("01701"))
wxbutton <- mybrowser$findElement(using = 'css selector', "#btnSearch")
wxbutton$clickElement()
wxbox$sendKeysToElement(list("01701"))
wxbutton$clickElement()
wxbox$sendKeysToElement(list("\uE007"))
wxbox$sendKeysToElement(list("\uE007"))
wxbox <- mybrowser$findElement(using = 'css selector', "#inputstring")
wxbox$sendKeysToElement(list("\uE007"))
wxbox$sendKeysToElement(list("\u01701"))
wxbox <- mybrowser$findElement(using = 'css selector', "#inputstring")
wxbox$sendKeysToElement(list("01701", "\uE007"))
wxbox$sendKeysToElement(list("01701", "\uE007"))
wxbutton$clickElement()
help(package="RSelenium")
vignette('RSelenium-basics')
install.packages("rvest")
library("rvest")
htmlpage <- html("http://forecast.weather.gov/MapClick.php?lat=42.31674913306716&lon=-71.42487878862437&site=all&smap=1#.VRsEpZPF84I")
forecasthtml <- html_nodes(htmlpage, "#detailed-forecast-body b , .forecast-text")
forecast <- html_text(forecasthtml)
paste(forecast, collapse =" ")
if((mouseCSV[i,6] == "mousePressedLeft") || (mous
;
updateR();
newdata = read.csv("user1.csv", sep=",")
# using subset function
datasetAOIS<- subset(newdata, trial=1, select=c(aoi))
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
newdata = read.csv("user1.csv", sep=",")
# using subset function
datasetAOIS<- subset(newdata, trial=1, select=c(aoi))
View(datasetAOIS)
View(newdata)
setwd("D:\Graz_2013\Sense_Phd_Project\SenseWebViz\elasticviz\data")
newdata = read.csv("user1.csv", sep=",")
# using subset function
datasetAOIS<- subset(newdata, trial=1, select=c(aoi))
setwd("D:\Graz_2013\Sense_Phd_Project\SenseWebViz\elasticviz\data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
View(newdata)
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata, trial=1, select=c(id, aoi))
View(datasetAOIS)
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata, trial=1, select=c(id, aoi, duration))
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata, trial=1, select=c(id, aoi, duration))
View(datasetAOIS)
w <- reshape(datasetAOIS.sort,
timevar = "id",
idvar = c("id", "aoi", "duration"),
direction = "wide")
w <- reshape(datasetAOIS.sort,
timevar = "aoi",
idvar = c("id", "aoi", "duration"),
direction = "wide")
datasetAOIS
x <- melt(datasetAOIS)
library(reshape2)
x <- melt(datasetAOIS)
library(reshape2)
install(reshape2)
install.packages('reshape2')
library(reshape2)
x <- melt(datasetAOIS)
View(x)
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
dcast(x, id ~ aoi + variable)
View(x)
new = dcast(x, id ~ aoi + variable)
x
reshape(datasetAOIS, direction = "wide", timevar = "id")
datasetAOIS<- subset(newdata, select=c(id, aoi, duration))
View(datasetAOIS)
setwd("D:\Graz_2013\Sense_Phd_Project\SenseWebViz\elasticviz\data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata, select=c(id, aoi, duration, trial))
View(datasetAOIS)
reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
View(datasetAOIS)
View(newdata)
View(x)
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
View(final)
datasetAOIS<- subset(newdata, trial=1, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
View(final)
setwd("D:\Graz_2013\Sense_Phd_Project\SenseWebViz\elasticviz\data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata, trial=1, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
setwd("D:\Graz_2013\Sense_Phd_Project\SenseWebViz\elasticviz\data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata, trial=1, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
View(final)
datasetAOIS<- subset(newdata, trial=1, select=c(id, aoi, duration, trial))
View(datasetAOIS)
newdata2 <- newdata[ which(newdata$trial==1]
newdata2 <- newdata[ which(newdata$trial==1)]
newdata2 <- newdata[ which(newdata$trial==1),]
View(newdata2)
datasetAOIS<- subset(newdata2, trial=1, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
View(final)
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
newdata2 <- newdata[ which(newdata$trial==1),]
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata2, trial=1, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(durations, file = "user1_analysis.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
write.table(final, file = "user1_analysis.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
newdata2 <- newdata[ which(newdata$trial==1),]
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
View(final)
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
newdata2 <- newdata[ which(newdata$trial==2),]
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = true, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
newdata2 <- newdata[ which(newdata$trial==2),]
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
View(final)
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata <- cbind(id=id, newdata)
newdata2 <- newdata[ which(newdata$trial==2),]
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
View(newdata2)
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
newdata2 <- newdata[ which(newdata$trial==2),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata2 <- cbind(id=id, newdata2)
View(newdata2)
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
newdata2 <- newdata[ which(newdata$trial==2),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata)
newdata2 <- cbind(id=id, newdata2)
View(newdata2)
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
newdata2 <- newdata[ which(newdata$trial==2),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata2)
newdata2 <- cbind(id=id, newdata2)
View(newdata2)
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
newdata2 <- newdata[ which(newdata$trial==2),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata2)
newdata2 <- cbind(id=id, newdata2)
# Dataset with AOIS (taking only trial=1 and column=AOI)
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = true, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
View(final)
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
write.table(final, file = "user1_analysis.csv", append = true, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = false,
col.names = false, qmethod = c("escape", "double"),
fileEncoding = "")
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
#Get only data where trial = ?
newdata2 <- newdata[ which(newdata$trial==2),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata2)
newdata2 <- cbind(id=id, newdata2)
# Dataset with AOIS
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = true, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = false,
col.names = false, qmethod = c("escape", "double"),
fileEncoding = "")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = true, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = false,
col.names = false, qmethod = c("escape", "double"),
fileEncoding = "")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = true, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
#Get only data where trial = ?
newdata2 <- newdata[ which(newdata$trial==1),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata2)
newdata2 <- cbind(id=id, newdata2)
# Dataset with AOIS
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = TRUE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
#Get only data where trial = ?
newdata2 <- newdata[ which(newdata$trial==1),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata2)
newdata2 <- cbind(id=id, newdata2)
# Dataset with AOIS
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = false, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
setwd("D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data")
#original dataset
newdata = read.csv("user1.csv", sep=",")
#Get only data where trial = ?
newdata2 <- newdata[ which(newdata$trial==1),]
## enter id here, you could also use 1:nrow(d) instead of rownames
id <- 1:nrow(newdata2)
newdata2 <- cbind(id=id, newdata2)
# Dataset with AOIS
datasetAOIS<- subset(newdata2, select=c(id, aoi, duration, trial))
final = reshape(datasetAOIS, direction = "wide", idvar = "trial", timevar = "id")
#write Durations Dataset
write.table(final, file = "user1_analysis.csv", append = FALSE, quote = TRUE, sep = ",",
eol = "\n", na = "NA", dec = ".", row.names = TRUE,
col.names = TRUE, qmethod = c("escape", "double"),
fileEncoding = "")
source('D:/Graz_2013/Sense_Phd_Project/SenseWebViz/elasticviz/data/rowscols_2.R')
View(datasetAOIS)
View(final)
